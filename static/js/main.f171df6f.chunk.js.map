{"version":3,"sources":["components/Clock.jsx","App.js","index.js"],"names":["Clock","state","time","Date","toLocaleTimeString","this","intervalId","setInterval","setState","prevProps","console","log","name","props","clearInterval","React","Component","App","isClockVisible","clockName","Math","ceil","random","showClock","hideClock","changeName","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4NAIaA,G,MAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,uDAKE,WAAqB,IAAD,OAClBC,KAAKC,WAAaC,aAAY,WAC5B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,yBAChC,OARP,gCAWE,SAAmBK,GAEjBC,QAAQC,IACNF,EAAUG,OAASP,KAAKQ,MAAMD,KAC1BP,KAAKJ,MAAMC,KADf,qCAEkCO,EAAUG,KAF5C,eAEuDP,KAAKQ,MAAMD,SAhBxE,kCAoBE,WACEE,cAAcT,KAAKC,cArBvB,oBAwBE,WACE,OAAOD,KAAKJ,MAAMC,SAzBtB,GAA2Ba,IAAMC,YCgElBC,G,kNA9DbhB,MAAQ,CACNiB,gBAAgB,EAChBC,UAAU,GAAD,OAAKC,KAAKC,KAAqB,IAAhBD,KAAKE,Y,EAG/BC,UAAY,WACV,EAAKf,SAAS,CACZU,gBAAgB,K,EAIpBM,UAAY,WACV,EAAKhB,SAAS,CACZU,gBAAgB,K,EAIpBO,WAAa,WACX,EAAKjB,SAAS,CACZW,UAAU,GAAD,OAAKC,KAAKC,KAAqB,IAAhBD,KAAKE,c,4CAIjC,WACE,MAAsCjB,KAAKJ,MAAnCiB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,yBAAKO,UAAU,OACb,2CACA,uBAAGA,UAAU,SAAb,gBAEG,IACAR,GAAkB,kBAAC,EAAD,CAAON,KAAMO,KAElC,4BACEQ,KAAK,SACLD,UAAU,SACVE,QAASvB,KAAKkB,WAHhB,cAQA,4BACEI,KAAK,SACLD,UAAU,SACVE,QAASvB,KAAKmB,WAHhB,cAQA,4BACEG,KAAK,SACLD,UAAU,SACVE,QAASvB,KAAKoB,YAHhB,wB,GAnDUV,IAAMC,YCDxBa,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.f171df6f.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    time: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    this.intervalId = setInterval(() => {\n      this.setState({ time: new Date().toLocaleTimeString() });\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps) {\n    // eslint-disable-next-line\n    console.log(\n      prevProps.name === this.props.name\n        ? this.state.time\n        : `The Clock was renamed from ${prevProps.name} to ${this.props.name}`,\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  render() {\n    return this.state.time;\n  }\n}\n\nClock.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport { Clock } from './components/Clock';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: `${Math.ceil(Math.random() * 100)}`,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  }\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  }\n\n  changeName = () => {\n    this.setState({\n      clockName: `${Math.ceil(Math.random() * 100)}`,\n    });\n  }\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p className=\"clock\">\n          Current time:\n          {' '}\n          {isClockVisible && <Clock name={clockName} />}\n        </p>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.showClock}\n        >\n          Show clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.hideClock}\n        >\n          Hide clock\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={this.changeName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}